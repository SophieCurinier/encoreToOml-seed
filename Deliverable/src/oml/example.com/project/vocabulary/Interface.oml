vocabulary <http://example.com/project/vocabulary/Interface#> as Interface {
	
	extends <http://www.w3.org/2001/XMLSchema#> as xsd

    extends <http://www.w3.org/2000/01/rdf-schema#> as rdfs
    
    extends <http://example.com/project/vocabulary/Concept#> as concepts
    
    @rdfs:comment "Defines connections and subnetwork interfaces"
    concept Interface < concepts:NamedEntityType[
    	restricts abstract to true
    	// restricts level to min 3
    	restricts level to max 4
    	
    ]
    
    @rdfs:comment "If true, indicates the interface may not be used directly by a component"
    scalar property abstract [
    	domain Interface
    	range xsd:boolean
    	functional
    ]
    
    @rdfs:comment "Indicates the system level at which it operates"  
    scalar property level [
    	domain Interface
    	range xsd:float
    ]
    
    concept Command < concepts:NamedEntityType
    
    concept Argument < concepts:ExternalField
    
    relation ArgumentOnCommand[
    	from Argument
    	to Command
    ]
    
    @rdfs:comment "Specifies a generic type to be used by the interface"
    concept GenericType < concepts:NamedEntityType
    
    concept Mapping < concepts:Field
    
    relation MappingOnGenericType[
    	from Mapping
    	to GenericType
    ]
    
    @rdfs:comment "Identifies one existing interface definition"
    concept BaseInterface < concepts:NamedEntityType
    
    concept Parameter < concepts:ExternalField
    
    relation ParameterOnInterface[
    	from Parameter
    	to Interface
    ]
    
    relation CommandOnInterface[
    	from Command
    	to Interface
    ]
}