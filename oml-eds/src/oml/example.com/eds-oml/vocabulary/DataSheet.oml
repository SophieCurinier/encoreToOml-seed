vocabulary <http://example.com/eds-oml/vocabulary/DataSheet#> as DataSheet {

	extends <http://www.w3.org/2000/01/rdf-schema#> as rdfs

	extends <http://example.com/eds-oml/vocabulary/Aspects#> as aspects

	extends <http://example.com/eds-oml/vocabulary/Component#> as component

	extends <http://example.com/eds-oml/vocabulary/DataType#> as dataType

	extends <http://example.com/eds-oml/vocabulary/Interface#> as interface

	extends <http://example.com/eds-oml/vocabulary/Metadata#> as metadata


	@rdfs:comment "Contains all known information about a particular device or package"
	concept Datasheet < aspects:IdentifiedThing

	@rdfs:comment "A DeviceDatasheet contains all known information about a particular device or class of devices"
	relation DatasheetContainsDevice [
		from Datasheet
		to Device
		functional
	]

	@rdfs:comment "DataSheet may reference one or more Package Files that capture an independently managed subset of that data"
	relation DatasheetContainsPackage [
		from Datasheet
		to Package
		functional
	]
	
	@rdfs:comment "A physical element of a system accessed through subnetwork-layer interfaces"
	concept Device < aspects:IdentifiedThing
 
	@rdfs:comment "A device contains metadata that describes the structure of the data contained in the device"
	relation DeviceContainsMetadatas [
		from Device
		to metadata:MetadataSet
	]
	
		@rdfs:comment "Packages describe a related set of components, data types, and interfaces"
	concept Package < aspects:IdentifiedThing
	
	
	@rdfs:comment "A Package contains Components that specify a behavioural mapping between those interfaces"
	relation PackageContainsComponents [
		from Package
		to component:ComponentSet
		functional
	]

	@rdfs:comment "A Package declares Interfaces referencing data types"
	relation PackageDeclaresInterfaces [
		from Package
		to interface:InterfaceSet
		functional
	]

	@rdfs:comment "A Package defines a variety of Data Types"
	relation PackageDefinesDataTypes [
		from Package
		to dataType:DataTypeSet
		functional
	]
}