vocabulary <http://example.com/eds-oml/vocabulary/Component#> as Component {

	extends <http://www.w3.org/2000/01/rdf-schema#> as rdfs

	extends <http://example.com/eds-oml/vocabulary/Aspects#> as aspects

	extends <http://example.com/eds-oml/vocabulary/Activity#> as activity

	extends <http://example.com/eds-oml/vocabulary/StateMachine#> as stateMachine

	extends <http://example.com/eds-oml/vocabulary/Interface#> as interface
	
	extends <http://example.com/eds-oml/vocabulary/DataType#> as dataType

	@rdfs:comment "The class of component items"
	concept Component < aspects:NamedEntityType

	concept ComponentSet
	
	concept Implementation
	
	relation ImplementationContainsStateMachineSet[
		from Implementation
		to stateMachine:StateMachineSet
		functional
	]
	
	relation ImplementationContainsActivitySet[
		from Implementation
		to activity:ActivitySet
		functional
	]
	
	relation ImplementationContainsVariableSet[
		from Implementation
		to stateMachine:VariableSet
		functional
	]
	

	@rdfs:comment "Components specify a behavioural mapping between the interfaces"
	relation ComponentRequiredInterfaceSet[
		from Component
		to interface:InterfaceSet
	]
	
	relation ComponentDeclaredInterfaceSet[
		from Component
		to interface:InterfaceSet
	]
	relation ComponentProvidedInterfaceSet[
		from Component
		to interface:InterfaceSet
	]
	
	relation ComponentContainsDataTypeSet[
		from Component
		to dataType:DataTypeSet
	]
	
	relation ComponentContainsImplementation[
		from Component
		to Implementation
	]
	
	relation Element[
		from ComponentSet
		to Component
	]
	
	
}